    call: input
    call: discriminant

    call: first
    out
    call: second
    out

    push 0
    push rdx

    jb: end
    j:

    end:
htl

discriminant:

    push rbx
    push rbx
    mult

    push 4
    push rax
    mult

    push rcx
    mult

    sub

    pop rdx

ret



first:
    push -1
    push rbx
    mult

    push rdx
    sqrt

    sub

    push 2
    push rax
    mult

    div

ret

quadratic:

ret

second:

    push -1
    push rbx
    mult

    push rdx
    sqrt

    sum

    push 2
    push rax
    mult

    div

ret



linear:

    push -1
    push rcx
    mult

    push rbx

    div

ret



single:

    push -1
    push rbx
    mult

    push 2
    push rax
    mult

    div

ret



input:

    in
    pop rax

    in
    pop rbx

    in
    pop rcx

ret

