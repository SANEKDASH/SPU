    call input

    push rax
    push 0

    je linear

    call discriminant

    push rdx

    jae salve

    push 0
    out

    hlt

linear:
    push 0
    push rbx

    je b_zero

    push -1
    push rcx
    mult
    push rbx
    div

    push 1

    out
    out

    hlt

salve:
    push 0
    push rax

    je linear

    call first_root
    call second_root

    push [1]
    push [2]

    jne two_roots

    push 1
    out
    push [1]
    out

    hlt

two_roots:
    push 2
    out

    push [1]
    out

    push [2]
    out

    hlt

b_zero:
    push 0
    push rcx
        je inf_roots
    push 0
    out

    hlt

inf_roots:
    push 3
    out

    hlt


 ;Arguments: rax, rbx, rcx
 ;
 ;Destroys: -
 ;
 ;Result: rax, rbx, rcx
 ;
 ;Reads coefficients for quadratic equation

input:
    in
    pop rax

    in
    pop rbx

    in
    pop rcx

    ret


 ;Arguments: rax, rbx, rdx, rcx
 ;
 ;Destroys: -
 ;
 ;Result: rdx
 ;
 ;Calculates discriminant

discriminant:
    push rbx
    push rbx
    mult

    push 4
    push rax
    mult
    push rcx
    mult

    sub

    pop rdx

    ret


 ;Arguments: rax, rbx, rdx, RAM[1]
 ;
 ;Destroys:
 ;
 ;Result: RAM[1]
 ;
 ;Calculates first root of quadratic equation

first_root:
    push -1
    push rbx
    mult
    push rdx
    sqrt

    sub

    push 2
    push rax
    mult
    div
    pop [1]

    ret


 ;Arguments: rax, rbx, rdx, RAM[2]
 ;
 ;Destroys:
 ;
 ;Result: RAM[2]
 ;
 ;Calculates second root of quadratic equation

second_root:
    push -1
    push rbx
    mult
    push rdx
    sqrt

    add

    push 2
    push rax
    mult

    div

    pop [2]

    ret









